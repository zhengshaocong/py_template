------
description: 代码规则规范（包含Python文件开发的约束条件，如功能修改原则、注释要求、文件目录规范、函数参数限制等）
globs:
  - "**/*.py"
alwaysApply: true
--------

1. 已实现且正确的功能，非特殊需求请勿随意修改。例如：当前指令是完善功能A，仅需专注于A，无需变更其他功能（如B）。
2. 生成的注释需使用中文，编码为UTF-8。
3. 生成中文时请检查是否有乱码，若有请及时修正。
4. 修改函数实现时，需先理解原有逻辑，在保留原有逻辑的基础上进行完善，不可直接移除原有实现。
5. 若未明确要求修改数据格式，数据修改需保持原格式。
6. 根目录需有README.md，说明程序作用。如收到“更新程序说明”指令，请及时更新README.md。
7. 对于['utils','pipeline']数组内的文件夹，需生成对应的md说明文件（如utils.md），说明内部文件功能。收到“更新xx说明”指令时，需更新对应md文件。
8. 检索文件内容时，优先查找md说明文件，并以其内容为准。
9. 所有临时文件需存放于data/temp文件夹，禁止放在根目录。
10. 禁止随意新建与项目无关的脚本文件。测试脚本应放在临时文件夹，测试通过后整合进正式程序。如不确定整合位置，请提出问题或检索相关文件。
11. 所有入口文件命名为run.py，项目需有虚拟环境，并提供start.py启动文件。start.py需自动进入虚拟环境，检查并安装依赖后启动run.py。
12. 所有测试文件需存放于tests文件夹，禁止放在根目录。
13. 根目录需保持整洁，非必要不新增文件。如确需新增，需及时说明原因。
14. 有时后创建文件再写入内容时，只会创建一个空文件，而没有代码，需要注意这这种情况
15. Python文件中，函数之间需有明显分界，避免代码混乱，提升可读性。
16. 函数参数超出3个就要对象作为参数传入
17. 只是作为调试的打印时，格式为print(f'-test-- ***************'), 其中***************是内容